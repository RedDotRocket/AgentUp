# AgentUp Agent Configuration - Minimal Template with Unified Security
# Barebone agent with text processing only - no AI, no external dependencies
#
# This minimal configuration includes essential AgentUp Security Framework features:
# - API key authentication with basic scope hierarchy
# - Plugin classification for LOCAL plugins
# - Simple context-aware middleware configuration
# - Comprehensive endpoint protection including MCP endpoints
# - Basic scope-based authorization (api:read, files:read, admin)
#
# Provides security improvements from the unified architecture while maintaining simplicity.

#  Agent Information
agent:
  name: {{ project_name }}
  description: {{ description }}
  version: 0.1.0

# Plugins configuration
plugins:
  - plugin_id: hello
    name: Hello Plugin
    description: Simple greeting plugin for testing and examples
    tags: [hello, basic, example]
    input_mode: text
    output_mode: text
    keywords: [hello, hi, greetings]
    patterns: ['^hello', '^hi', 'greetings']
    routing_mode: direct
    priority: 50
    capabilities:
      - capability_id: hello
        required_scopes: ["api:read"]
        enabled: true

# Routing configuration
routing:
  default_mode: direct  # Use direct routing by default for minimal template

# AI configuration
{% if ai_provider_config %}
ai_provider:
    provider: {{ ai_provider_config.provider }}
{% if ai_provider_config.provider == 'openai' %}
    api_key: ${OPENAI_API_KEY}
    model: {{ ai_provider_config.model | default('gpt-4o-mini') }}
{% elif ai_provider_config.provider == 'anthropic' %}
    api_key: ${ANTHROPIC_API_KEY}
    model: {{ ai_provider_config.model | default('claude-3-5-sonnet-20241022') }}
{% elif ai_provider_config.provider == 'ollama' %}
    model: {{ ai_provider_config.model | default('llama3') }}
    base_url: ${OLLAMA_BASE_URL:http://localhost:11434/v1}
{% endif %}
    temperature: 0.7
    max_tokens: 1000
    top_p: 1.0
{% endif %}

# AI system prompt and configuration
ai:
  enabled: true
  system_prompt: |
    You are a helpful AI assistant created by AgentUp.

    Your role:
    - Understand user requests naturally
    - Provide helpful, accurate responses
    - Maintain a friendly and professional tone
    - Use available functions when appropriate
    - Keep responses concise and relevant

    Always be helpful, accurate, and maintain context in conversations.

# Unified security configuration for minimal template
security:
  enabled: true
  auth:
    api_key:
      header_name: "X-API-Key"
      location: "header"  # Options: header, query, cookie
      keys:
        - key: "{{ generate_api_key() }}"
          scopes: ["api:read", "api:write", "system:read"]  # Permissions for demo plugin
  # Basic scope hierarchy for minimal template
  scope_hierarchy:
    admin: ["*"]        # Admin has all permissions
    api:write: ["api:read"]   # Write access includes read
    api:read: []        # Basic read access
    system:read: []     # System information access
    files:read: []      # File read access

# Cache configuration
{% if has_middleware and 'cache' in feature_config.get('middleware', []) %}
cache:
{% if feature_config.get('cache_backend') == 'valkey' %}
  type: valkey
  config:
    url: '${VALKEY_URL:valkey://localhost:6379}'
    db: 1                    # Use DB 1 for cache
    max_connections: 10
    default_ttl: 300         # Default TTL for cache items in seconds (5 minutes)
{% else %}
  type: memory
  config:
    max_size: 1000           # Maximum number of items in memory cache
    default_ttl: 300         # Default TTL for cache items in seconds (5 minutes)
{% endif %}
{% endif %}

# Simple context-aware middleware for minimal template
middleware:
  - name: timed
    params: {}
{% if has_middleware and 'cache' in feature_config.get('middleware', []) %}
  - name: cached
    params:
      ttl: 300  # 5 minutes
      # Simple plugin-aware caching for minimal template
      plugin_specific_ttl:
        local: 300      # Standard cache for local plugins
        ai_function: 60 # Shorter cache for AI functions
{% endif %}

# Push notifications configuration
push_notifications:
  enabled: true
  backend: memory             # Simple memory backend for minimal template
  validate_urls: false        # Disable validation for minimal setup


# State management configuration
{% if has_state_management %}
state_management:
  enabled: true
{% if state_backend == 'valkey' %}
  backend: valkey          # Distributed state backend for production
  ttl: 3600                # 1 hour expiration
  config:
    url: '${VALKEY_URL:valkey://localhost:6379}'
    key_prefix: "agentup:state:"
{% elif state_backend == 'memory' %}
  backend: memory          # In-memory state backend for development
  ttl: 3600                # 1 hour expiration
  config: {}
{% elif state_backend == 'file' %}
  backend: file            # File-based state backend for local development
  ttl: 3600                # 1 hour expiration
  config:
    storage_dir: "./conversation_states"
{% endif %}

{% else %}
# State management disabled for minimal template
state_management:
  enabled: false

{% endif %}

# Logging configuration
logging:
  enabled: true
  level: "INFO"
  format: "text"  # Simple text format for minimal template

  # Console output settings
  console:
    enabled: true
    colors: true

  # File logging disabled for minimal template
  file:
    enabled: false

  # Basic features for minimal template
  correlation_id: false       # Disabled for simplicity
  request_logging: false      # Disabled for simplicity

  # Uvicorn integration
  uvicorn:
    access_log: false         # Minimal logging
    disable_default_handlers: true

# Development configuration (disabled by default)
development:
  enabled: false  # Keep all development features disabled in minimal template
  
  # Filesystem plugins remain disabled for security
  filesystem_plugins:
    enabled: false
    allowed_directories:
      - ~/.agentup/plugins